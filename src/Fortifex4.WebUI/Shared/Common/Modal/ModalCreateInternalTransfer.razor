@namespace Fortifex4.WebUI.Shared.Common.Modal
@attribute [Authorize]

@inject IInternalTransfersService _internalTransfersService
@inject IWalletsService _walletsService

@inject NavigationManager _navigationManager

<BaseModal @ref="BaseModal"
           ModalTitle="@Title"
           IsLoading="IsLoading"
           OnSubmit="OnSubmitInternalTransferAsync">
    <ChildContent>
        <EditForm Model="Input" OnValidSubmit="OnSubmitInternalTransferAsync">
            <DataAnnotationsValidator />
            <div class="form-row">
                @if (IsPublic)
                {
                    <div class="form-group col-6">
                        <label>From Wallet</label>
                        <InputSelect @bind-Value="SelectFromWallet" class="form-control chosen-select">
                        @if (ListFromWallets.Count > 0)
                        {
                            @foreach (var wallet in ListFromWallets)
                            {
                            <option value="@wallet.PocketID.ToString()">@wallet.ProviderNameWithWalletName</option>
                            }
                        }
                        </InputSelect>
                        <ValidationMessage For="@(() => Input.FromPocketID)" />
                    </div>
                }
                else
                {
                    <div class="form-group col-6">
                        <label>From Wallet</label>
                        <InputText @bind-Value="Wallet.ProviderNameWithWalletName" class="form-control" disabled />
                    </div>
                }
                <div class="form-group col-6">
                    <label>Blockchain</label>
                    <InputSelect @bind-Value="SelectToWallet" class="form-control chosen-select">
                    @if (ListToWallets.Count > 0)
                    {
                        @foreach (var wallet in ListToWallets)
                        {
                            <option value="@wallet.PocketID.ToString()">@wallet.ProviderNameWithWalletName</option>
                        }
                    }
                    </InputSelect>
                    <ValidationMessage For="@(() => Input.ToPocketID)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-4">
                    <label>Currency</label>
                    <InputText @bind-Value="Wallet.MainPocket.CurrencyName" class="form-control" disabled/>
                </div>
                <div class="form-group col-4">
                    <label>Amount</label>
                    <InputNumber @bind-Value="Input.Amount" class="form-control" />
                    <ValidationMessage For="@(() => Input.Amount)" />
                </div>
                <div class="form-group col-4">
                    <label>Date & Time</label>
                    <input @bind="Input.TransactionDateTime" class="form-control" type="datetime-local" step="1" />
                    <ValidationMessage For="@(() => Input.TransactionDateTime)" />
                </div>
            </div>
            <div asp-validation-summary="All" class="text-danger"></div>
        </EditForm>
    </ChildContent>
</BaseModal>