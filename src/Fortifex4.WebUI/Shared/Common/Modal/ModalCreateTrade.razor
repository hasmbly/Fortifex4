@namespace Fortifex4.WebUI.Shared.Common.Modal
@attribute [Authorize]

@inject ITradesService _tradesService
@inject IOwnersService _ownersService
@inject IMembersService _membersService
@inject ICurrenciesService _currenciesService
@inject IToolsService _toolsService
@inject ToggleCheckboxState _toggleCheckboxState

@inject NavigationManager _navigationManager

<BaseModal @ref="BaseModal"
           ModalTitle="@Title"
           IsLoading="IsLoading"
           OnSubmit="OnSubmitAsync"
           TriggerAfterModalOpened="LoadDataAsync">
    <ChildContent>
        <EditForm Model="Input" OnValidSubmit="OnSubmitAsync">
            <DataAnnotationsValidator />
            <div class="form-row">
                @if (IsPublic)
                {
                    <div class="form-group col-6">
                        <label>Exchange</label>
                        <InputSelect @bind-Value="SelectedExchangeProvider" class="form-control chosen-select">
                            @if (Exchanges.Count > 0)
                                {
                                @foreach (var exchange in Exchanges)
                                    {
                                    <option value="@exchange.OwnerID.ToString()">@exchange.ProviderName</option>
                                    }
                                }
                        </InputSelect>
                        <ValidationMessage For="@(() => Input.OwnerID)" />
                    </div>
                }
                else
                {
                    <div class="form-group col-6">
                        <label>Exchange</label>
                        <InputText @bind-Value="Owner.ProviderName" class="form-control" disabled />
                        <ValidationMessage For="@(() => Input.OwnerID)" />
                    </div>
                }
                <div class="form-group col-6">
                    <label>Trade Type</label>
                    <ToggleCheckbox Attributes="@TradeTypeAttributes" OnChangeChecked="OnChangeCheckedToggleState" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-3">
                    <label>@LabelAmount</label>
                    <InputNumber @bind-Value="Amount" @oninput="@(e => Amount = !string.IsNullOrEmpty(e.Value.ToString()) ? Convert.ToDecimal(e.Value) : 0)" class="form-control" />
                    <ValidationMessage For="@(() => Input.Amount)" />
                </div>
                <div class="form-group col-3">
                    <label>Withhold</label>
                    <ToggleCheckbox Attributes="@WithHoldAttributes" OnChangeChecked="OnChangeCheckedToggleState" />
                </div>

                <div class="form-group col-6">
                    <label>Date & Time</label>
                    <input @bind="Input.TransactionDateTime" class="form-control" type="datetime-local" step="1" />
                    <ValidationMessage For="@(() => Input.TransactionDateTime)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-6">
                    <label>Currency</label>
                    <InputSelect @bind-Value="SelectFromCurrencies" class="form-control chosen-select">
                        @if (FromCurrencies.Count > 0)
                        {
                            @foreach (var fromCurrencies in FromCurrencies)
                            {
                                <option value="@fromCurrencies.CurrencyID.ToString()">@fromCurrencies.NameWithSymbol</option>
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => Input.FromCurrencyID)" />
                </div>
                <div class="form-group col-6">
                    <label>Pair Currency</label>
                    <InputSelect @bind-Value="SelectPairCurrencies" class="form-control chosen-select">
                        @if (PairCurrencies.Count > 0)
                        {
                            @foreach (var paircurrencies in PairCurrencies)
                            {
                                <option value="@paircurrencies.CurrencyID.ToString()">@paircurrencies.NameWithSymbol</option>
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => Input.ToCurrencyID)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-6">
                    <label>@LabelUnitPrice</label>
                    <InputNumber @bind-Value="UnitPrice" @oninput="@(e => UnitPrice = !string.IsNullOrEmpty(e.Value.ToString()) ? Convert.ToDecimal(e.Value) : 0)" class="form-control" />
                    <ValidationMessage For="@(() => Input.UnitPrice)" />
                </div>
                <div class="form-group col-6">
                    <label>Total</label>
                    <InputNumber @bind-Value="Total" class="form-control" disabled />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-6">
                    <label>USD Unit Price</label>
                    <InputNumber @bind-Value="UnitPriceInUSD" @oninput="@(e => UnitPriceInUSD = !string.IsNullOrEmpty(e.Value.ToString()) ? Convert.ToDecimal(e.Value) : 0)" class="form-control" />
                    <ValidationMessage For="@(() => Input.UnitPriceInUSD)" />
                </div>
                <div class="form-group col-6">
                    <label>USD Total</label>
                    <InputNumber @bind-Value="TotalInUSD" class="form-control" disabled />
                </div>
            </div>
            <div asp-validation-summary="All" class="text-danger"></div>
        </EditForm>
    </ChildContent>
</BaseModal>